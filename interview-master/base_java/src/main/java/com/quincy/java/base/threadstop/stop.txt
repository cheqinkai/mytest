需要搞清楚这么几个点
jdk为什么弃用stop和suspend
stop停止是线程不安全的(写代码的时候多个线程共用一把锁)
因为它在终止一个线程时会强制中断线程的执行，不管run方法是否执行完了，并且还会释放这个线程所持有的所
有的锁对象。这一现象会被其它因为请求锁而阻塞的线程看到，使他们继续向下执行。这就会造成数据的不一致，
破坏了原子逻辑
我们还是拿银行转账作为例子，我们还是从A账户向B账户转账100元，我们之前讨论过，这一过程分为三步，
第一步是从A账户中减去100元，假如到这时线程就被stop了，那么这个线程就会释放它所取得锁，然后其他的
线程继续执行，这样A账户就莫名其妙的少了100元而B账户也没有收到钱。这就是stop方法的不安全性。

suspend方法为什么被弃用
suspend被弃用的原因是因为它会造成死锁。suspend方法和stop方法不一样，它不会破换对象和强制释放锁，
相反它会一直保持对锁的占有，一直到其他的线程调用resume方法，它才能继续向下执行。
假如有A，B两个线程，A线程在获得某个锁之后被suspend阻塞，这时A不能继续执行，
线程B在或者相同的锁之后才能调用resume方法将A唤醒，但是此时的锁被A占有，B不能继续执行，
也就不能及时的唤醒A，此时A，B两个线程都不能继续向下执行而形成了死锁。这就是suspend被弃用的原因。